// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mac_vivado_dma64_w32_load32_HH_
#define _mac_vivado_dma64_w32_load32_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct mac_vivado_dma64_w32_load32 : public sc_module {
    // Port declarations 37
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > p_inbuff_0_V_address0;
    sc_out< sc_logic > p_inbuff_0_V_ce0;
    sc_out< sc_logic > p_inbuff_0_V_we0;
    sc_out< sc_lv<32> > p_inbuff_0_V_d0;
    sc_out< sc_lv<12> > p_inbuff_1_V_address0;
    sc_out< sc_logic > p_inbuff_1_V_ce0;
    sc_out< sc_logic > p_inbuff_1_V_we0;
    sc_out< sc_lv<32> > p_inbuff_1_V_d0;
    sc_in< sc_lv<64> > in1_word_V_dout;
    sc_in< sc_logic > in1_word_V_empty_n;
    sc_out< sc_logic > in1_word_V_read;
    sc_in< sc_lv<32> > mac_vec;
    sc_in< sc_lv<32> > mac_len;
    sc_out< sc_lv<96> > load_ctrl;
    sc_out< sc_logic > load_ctrl_ap_vld;
    sc_in< sc_logic > load_ctrl_ap_ack;
    sc_in< sc_lv<32> > chunk;
    sc_in< sc_lv<32> > conf_info_mac_n;
    sc_out< sc_lv<32> > mac_vec_out_din;
    sc_in< sc_logic > mac_vec_out_full_n;
    sc_out< sc_logic > mac_vec_out_write;
    sc_out< sc_lv<32> > mac_len_out_din;
    sc_in< sc_logic > mac_len_out_full_n;
    sc_out< sc_logic > mac_len_out_write;
    sc_out< sc_lv<32> > chunk_out_din;
    sc_in< sc_logic > chunk_out_full_n;
    sc_out< sc_logic > chunk_out_write;
    sc_out< sc_lv<32> > conf_info_mac_n_out_din;
    sc_in< sc_logic > conf_info_mac_n_out_full_n;
    sc_out< sc_logic > conf_info_mac_n_out_write;


    // Module declarations
    mac_vivado_dma64_w32_load32(sc_module_name name);
    SC_HAS_PROCESS(mac_vivado_dma64_w32_load32);

    ~mac_vivado_dma64_w32_load32();

    sc_trace_file* mVcdFile;

    mac_vivado_dma64_w32_regslice_forward<96>* regslice_forward_load_ctrl_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > in1_word_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln28_fu_247_p2;
    sc_signal< sc_logic > load_ctrl_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > mac_vec_out_blk_n;
    sc_signal< sc_logic > mac_len_out_blk_n;
    sc_signal< sc_logic > chunk_out_blk_n;
    sc_signal< sc_logic > conf_info_mac_n_out_blk_n;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > mul_ln18_fu_180_p2;
    sc_signal< sc_lv<32> > mul_ln18_reg_285;
    sc_signal< sc_lv<31> > dma_length_fu_208_p4;
    sc_signal< sc_lv<31> > dma_length_reg_290;
    sc_signal< sc_lv<31> > i_fu_252_p2;
    sc_signal< sc_logic > regslice_forward_load_ctrl_U_apdone_blk;
    sc_signal< bool > ap_block_state4;
    sc_signal< sc_lv<31> > i_0_i_i_i_reg_169;
    sc_signal< sc_lv<64> > zext_ln180_fu_263_p1;
    sc_signal< sc_lv<32> > mul_ln18_fu_180_p0;
    sc_signal< sc_lv<32> > mul_ln18_fu_180_p1;
    sc_signal< sc_lv<32> > add_ln18_fu_186_p2;
    sc_signal< sc_lv<32> > or_ln18_fu_191_p2;
    sc_signal< sc_lv<32> > length_fu_197_p2;
    sc_signal< sc_lv<32> > index_fu_203_p1;
    sc_signal< sc_lv<32> > index_fu_203_p2;
    sc_signal< sc_lv<31> > dma_index_fu_222_p4;
    sc_signal< sc_lv<32> > dma_length_2_fu_218_p1;
    sc_signal< sc_lv<32> > dma_index_2_fu_232_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_lv<96> > load_ctrl_int;
    sc_signal< sc_logic > load_ctrl_ap_vld_int;
    sc_signal< sc_logic > load_ctrl_ap_ack_int;
    sc_signal< sc_logic > regslice_forward_load_ctrl_U_vld_out;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<8> ap_const_lv8_20;
    static const sc_lv<8> ap_const_lv8_3F;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln18_fu_186_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state1();
    void thread_ap_block_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_chunk_out_blk_n();
    void thread_chunk_out_din();
    void thread_chunk_out_write();
    void thread_conf_info_mac_n_out_blk_n();
    void thread_conf_info_mac_n_out_din();
    void thread_conf_info_mac_n_out_write();
    void thread_dma_index_2_fu_232_p1();
    void thread_dma_index_fu_222_p4();
    void thread_dma_length_2_fu_218_p1();
    void thread_dma_length_fu_208_p4();
    void thread_i_fu_252_p2();
    void thread_icmp_ln28_fu_247_p2();
    void thread_in1_word_V_blk_n();
    void thread_in1_word_V_read();
    void thread_index_fu_203_p1();
    void thread_index_fu_203_p2();
    void thread_length_fu_197_p2();
    void thread_load_ctrl_ap_vld();
    void thread_load_ctrl_ap_vld_int();
    void thread_load_ctrl_blk_n();
    void thread_load_ctrl_int();
    void thread_mac_len_out_blk_n();
    void thread_mac_len_out_din();
    void thread_mac_len_out_write();
    void thread_mac_vec_out_blk_n();
    void thread_mac_vec_out_din();
    void thread_mac_vec_out_write();
    void thread_mul_ln18_fu_180_p0();
    void thread_mul_ln18_fu_180_p1();
    void thread_mul_ln18_fu_180_p2();
    void thread_or_ln18_fu_191_p2();
    void thread_p_inbuff_0_V_address0();
    void thread_p_inbuff_0_V_ce0();
    void thread_p_inbuff_0_V_d0();
    void thread_p_inbuff_0_V_we0();
    void thread_p_inbuff_1_V_address0();
    void thread_p_inbuff_1_V_ce0();
    void thread_p_inbuff_1_V_d0();
    void thread_p_inbuff_1_V_we0();
    void thread_zext_ln180_fu_263_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
